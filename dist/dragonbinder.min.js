!function(){"use strict";function e({state:e,mutations:t,actions:o,getters:n}){let r=!0,i=[];function s(){if(r)throw new Error("You need to commit a mutation to change the state");return!0}function u(e,t,o){if(!t[o])throw new Error(`The ${e} "${o}" does not exists.`);return!0}function c(e,t){if("function"!=typeof t)throw new Error(`You need to provide a valid function to ${e}.`);return!0}let f={state:new Proxy(e||{},{get:(e,t)=>(function e(t){return Object.isFrozen(t)||(Object.getOwnPropertyNames(t).forEach(o=>"object"==typeof t[o]&&null!==t[o]&&e(t[o])),Object.freeze(t)),t})(e[t]),set(e,t,o){s();let n=e[t];return e[t]=o,i.forEach(e=>e(f.state,t,o,n)),!0},deleteProperty:(e,t)=>(s(),delete e[t],!0)}),commit(e,...o){u("mutation",t,e),r=!1,o.unshift(f.state),t[e].apply(f,o),r=!0},dispatch:(e,...t)=>(u("action",o,e),t.unshift(f),Promise.resolve(o[e].apply(f,t))),getters:new Proxy(n||{},{get:(e,t)=>e[t]&&e[t](f.state,f.getters)}),subscribe:e=>(c("subscribe",e),-1===i.indexOf(e)&&i.push(e),()=>f.unsubscribe(e)),unsubscribe(e){c("unsubscribe",e);let t=i.indexOf(e);t>-1&&i.splice(t,1)}};return f}"object"==typeof exports?module.exports=e:("undefined"==typeof window?global:window).Store=e}();//# sourceMappingURL=dragonbinder.min.js.map
